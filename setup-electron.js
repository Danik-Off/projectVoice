const fs = require('fs-extra');
const path = require('path');
const { execSync } = require('child_process');

async function setupElectronApp() {
    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    try {
        // 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        const electronDir = path.join(__dirname, 'electron');
        const backendDir = path.join(electronDir, 'backend');
        const frontendDir = path.join(electronDir, 'frontend');
        
        await fs.ensureDir(backendDir);
        await fs.ensureDir(frontendDir);
        
        // 2. –ö–æ–ø–∏—Ä—É–µ–º backend —Ñ–∞–π–ª—ã
        console.log('üìÅ –ö–æ–ø–∏—Ä—É–µ–º backend —Ñ–∞–π–ª—ã...');
        await fs.copy(path.join(__dirname, 'backend'), backendDir, {
            filter: (src) => {
                // –ò—Å–∫–ª—é—á–∞–µ–º node_modules –∏ –¥—Ä—É–≥–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
                return !src.includes('node_modules') && 
                       !src.includes('.git') && 
                       !src.includes('package-lock.json');
            }
        });
        
        // 3. –°–æ–±–∏—Ä–∞–µ–º frontend
        console.log('üî® –°–æ–±–∏—Ä–∞–µ–º frontend...');
        process.chdir(path.join(__dirname, 'frontend'));
        execSync('npm run build', { stdio: 'inherit' });
        
        // 4. –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π frontend
        console.log('üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π frontend...');
        await fs.copy(
            path.join(__dirname, 'frontend', 'build'), 
            path.join(frontendDir, 'build')
        );
        
        // 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Electron
        console.log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Electron...');
        process.chdir(electronDir);
        execSync('npm install', { stdio: 'inherit' });
        
        console.log('‚úÖ Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: cd electron && npm start');
        console.log('üîß –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: cd electron && npm run dev');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    setupElectronApp();
}

module.exports = setupElectronApp;
