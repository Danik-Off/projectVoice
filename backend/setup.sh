#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./setup.sh [--no-install] [--no-db-provision] [--run] [--env-auto] [--force-env]

set -euo pipefail

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è ProjectVoice..."

ROOT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$ROOT_DIR"

NO_INSTALL=0
NO_DB_PROVISION=0
RUN_AFTER=0
ENV_AUTO=0
FORCE_ENV=0
for arg in "$@"; do
  case "$arg" in
    --no-install) NO_INSTALL=1 ;;
    --no-db-provision) NO_DB_PROVISION=1 ;;
    --run) RUN_AFTER=1 ;;
    --env-auto) ENV_AUTO=1 ;;
    --force-env) FORCE_ENV=1 ;;
  esac
done

os="$(uname -s)"

log() { echo -e "$1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js –∏ npm
if ! command -v node >/dev/null 2>&1; then
  log "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
  exit 1
fi
log "‚úÖ Node.js: $(node --version)"

if ! command -v npm >/dev/null 2>&1; then
  log "‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
  exit 1
fi
log "‚úÖ npm: $(npm --version)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ "$NO_INSTALL" -eq 0 ]; then
  log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
  npm install
else
  log "‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (--no-install)"
fi

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–µ–∫—Ä–µ—Ç–æ–≤
gen_secret() {
  if command -v openssl >/dev/null 2>&1; then
    openssl rand -hex 32
  else
    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))" 2>/dev/null || echo "$(date +%s%N)"
  fi
}

gen_password() {
  if command -v openssl >/dev/null 2>&1; then
    openssl rand -base64 18 | tr -dc 'A-Za-z0-9' | head -c 18
  else
    node -e "console.log(require('crypto').randomBytes(18).toString('base64').replace(/[^A-Za-z0-9]/g,'' ).slice(0,18))" 2>/dev/null || echo "Pass$(date +%s)"
  fi
}

write_env_file() {
  local DB_USERNAME_V="$1"
  local DB_PASSWORD_V="$2"
  local DB_DATABASE_V="$3"
  local DB_HOST_V="$4"
  local DB_DIALECT_V="$5"
  local DB_PORT_V="$6"
  local PORT_V="$7"
  local NODE_ENV_V="$8"
  local JWT_SECRET_V="$9"
  local JWT_EXPIRES_V="${10}"

  cat > .env << EOF
# Database Configuration
DB_USERNAME=${DB_USERNAME_V}
DB_PASSWORD=${DB_PASSWORD_V}
DB_DATABASE=${DB_DATABASE_V}
DB_HOST=${DB_HOST_V}
DB_DIALECT=${DB_DIALECT_V}
DB_PORT=${DB_PORT_V}

# Server Configuration
PORT=${PORT_V}
NODE_ENV=${NODE_ENV_V}

# JWT Configuration
JWT_SECRET=${JWT_SECRET_V}
JWT_EXPIRES_IN=${JWT_EXPIRES_V}
EOF
}

# –°–æ–∑–¥–∞–Ω–∏–µ/–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ .env
if [ -f .env ] && [ "$FORCE_ENV" -eq 0 ]; then
  log "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force-env –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏)"
else
  if [ "$ENV_AUTO" -eq 1 ]; then
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º (–±–µ–∑ –≤–≤–æ–¥–∞)
    DB_HOST_DEF="${DB_HOST:-localhost}"
    DB_PORT_DEF="${DB_PORT:-3306}"
    DB_DIALECT_DEF="${DB_DIALECT:-mysql}"
    DB_DATABASE_DEF="${DB_DATABASE:-projectvoice}"
    DB_USERNAME_DEF="${DB_USERNAME:-projectvoice}"
    DB_PASSWORD_DEF="${DB_PASSWORD:-$(gen_password)}"
    PORT_DEF="${PORT:-5001}"
    NODE_ENV_DEF="${NODE_ENV:-development}"
    JWT_SECRET_DEF="${JWT_SECRET:-$(gen_secret)}"
    JWT_EXPIRES_DEF="${JWT_EXPIRES_IN:-24h}"

    write_env_file "$DB_USERNAME_DEF" "$DB_PASSWORD_DEF" "$DB_DATABASE_DEF" "$DB_HOST_DEF" "$DB_DIALECT_DEF" "$DB_PORT_DEF" "$PORT_DEF" "$NODE_ENV_DEF" "$JWT_SECRET_DEF" "$JWT_EXPIRES_DEF"
    log "‚úÖ –§–∞–π–ª .env —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (--env-auto)"
  else
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    log "üß© –ó–∞–ø–æ–ª–Ω—è—é .env (–Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    read -r -p "DB_HOST [localhost]: " DB_HOST_INP; DB_HOST_INP=${DB_HOST_INP:-localhost}
    read -r -p "DB_PORT [3306]: " DB_PORT_INP; DB_PORT_INP=${DB_PORT_INP:-3306}
    read -r -p "DB_DIALECT [mysql]: " DB_DIALECT_INP; DB_DIALECT_INP=${DB_DIALECT_INP:-mysql}
    read -r -p "DB_DATABASE [projectvoice]: " DB_DATABASE_INP; DB_DATABASE_INP=${DB_DATABASE_INP:-projectvoice}
    read -r -p "DB_USERNAME [projectvoice]: " DB_USERNAME_INP; DB_USERNAME_INP=${DB_USERNAME_INP:-projectvoice}
    read -r -s -p "DB_PASSWORD [–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è]: " DB_PASSWORD_INP; echo ""
    DB_PASSWORD_INP=${DB_PASSWORD_INP:-$(gen_password)}
    read -r -p "PORT [5001]: " PORT_INP; PORT_INP=${PORT_INP:-5001}
    read -r -p "NODE_ENV [development]: " NODE_ENV_INP; NODE_ENV_INP=${NODE_ENV_INP:-development}
    read -r -s -p "JWT_SECRET [–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è]: " JWT_SECRET_INP; echo ""
    JWT_SECRET_INP=${JWT_SECRET_INP:-$(gen_secret)}
    read -r -p "JWT_EXPIRES_IN [24h]: " JWT_EXPIRES_INP; JWT_EXPIRES_INP=${JWT_EXPIRES_INP:-24h}

    write_env_file "$DB_USERNAME_INP" "$DB_PASSWORD_INP" "$DB_DATABASE_INP" "$DB_HOST_INP" "$DB_DIALECT_INP" "$DB_PORT_INP" "$PORT_INP" "$NODE_ENV_INP" "$JWT_SECRET_INP" "$JWT_EXPIRES_INP"
    log "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
  fi
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
set -a
source ./.env || true
set +a

DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-3306}
DB_DATABASE=${DB_DATABASE:-test_projectvoice}
DB_USERNAME=${DB_USERNAME:-test_projectvoice}
DB_PASSWORD=${DB_PASSWORD:-test_password}
PORT=${PORT:-5001}

log "‚ÑπÔ∏è  –ö–æ–Ω—Ñ–∏–≥ –ë–î: host=$DB_HOST port=$DB_PORT db=$DB_DATABASE user=$DB_USERNAME dialect=${DB_DIALECT:-mysql}"

# MySQL: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Ç–æ–ª—å–∫–æ macOS –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ brew)
if ! command -v mysql >/dev/null 2>&1; then
  if [ "$os" = "Darwin" ] && command -v brew >/dev/null 2>&1; then
    log "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é MySQL —á–µ—Ä–µ–∑ Homebrew..."
    brew install mysql || true
    log "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞—é MySQL –∫–∞–∫ —Å–µ—Ä–≤–∏—Å..."
    brew services start mysql || true
  else
    log "‚ö†Ô∏è  MySQL –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MySQL –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    log "   macOS: brew install mysql"
    log "   Ubuntu/Debian: sudo apt install mysql-server"
    NO_DB_PROVISION=1
  fi
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ MySQL (–µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω)
if command -v mysql >/dev/null 2>&1; then
  log "‚è≥ –û–∂–∏–¥–∞—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MySQL..."
  for i in {1..30}; do
    if mysqladmin ping -h"$DB_HOST" -P"$DB_PORT" --silent >/dev/null 2>&1; then
      log "‚úÖ MySQL –¥–æ—Å—Ç—É–ø–µ–Ω"
      break
    fi
    sleep 1
    if [ "$i" -eq 30 ]; then
      log "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ MySQL –Ω–∞ ${DB_HOST}:${DB_PORT}"
    fi
  done
fi

# –ü—Ä–æ–≤–∏–∂–∏–Ω–∏–Ω–≥ –ë–î: —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [ "$NO_DB_PROVISION" -eq 0 ] && command -v mysql >/dev/null 2>&1; then
  log "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."

  run_sql() {
    local SQL="$1"
    # 1) –ü—ã—Ç–∞–µ–º—Å—è —á–µ—Ä–µ–∑ root –±–µ–∑ –ø–∞—Ä–æ–ª—è (—á–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ)
    if mysql -h"$DB_HOST" -P"$DB_PORT" -uroot -e "$SQL" >/dev/null 2>&1; then
      return 0
    fi
    # 2) –ü—Ä–æ–±—É–µ–º —Å –ø–∞—Ä–æ–ª–µ–º –∏–∑ MYSQL_ROOT_PASSWORD, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
    if [ -n "${MYSQL_ROOT_PASSWORD:-}" ]; then
      if mysql -h"$DB_HOST" -P"$DB_PORT" -uroot -p"$MYSQL_ROOT_PASSWORD" -e "$SQL" >/dev/null 2>&1; then
        return 0
      fi
    fi
    return 1
  }

  SQL_CREATE_DB="CREATE DATABASE IF NOT EXISTS \`$DB_DATABASE\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
  SQL_CREATE_USER="CREATE USER IF NOT EXISTS '$DB_USERNAME'@'localhost' IDENTIFIED BY '$DB_PASSWORD'; CREATE USER IF NOT EXISTS '$DB_USERNAME'@'%' IDENTIFIED BY '$DB_PASSWORD';"
  SQL_GRANT="GRANT ALL PRIVILEGES ON \`$DB_DATABASE\`.* TO '$DB_USERNAME'@'localhost'; GRANT ALL PRIVILEGES ON \`$DB_DATABASE\`.* TO '$DB_USERNAME'@'%'; FLUSH PRIVILEGES;"

  if run_sql "$SQL_CREATE_DB" && run_sql "$SQL_CREATE_USER" && run_sql "$SQL_GRANT"; then
    log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤—ã"
  else
    log "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ë–î."
    log "   –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∑–∞–¥–∞–π—Ç–µ MYSQL_ROOT_PASSWORD –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:"
    log "   MYSQL_ROOT_PASSWORD=... ./setup.sh"
  fi
else
  log "‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫ –ø—Ä–æ–≤–∏–∂–∏–Ω–∏–Ω–≥–∞ –ë–î (--no-db-provision –∏–ª–∏ –Ω–µ—Ç mysql)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∏ Node-–∫–æ–Ω—Ñ–∏–≥–∞
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Node..."
node -e "require('dotenv').config(); const cfg=require('./config/config.js'); console.log('‚úÖ cfg.development OK:', cfg.development && cfg.development.database);" 2>/dev/null || {
  log "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Node/Sequelize –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"; exit 1; }

# –ú–∏–≥—Ä–∞—Ü–∏–∏
log "üóÑÔ∏è  –ó–∞–ø—É—Å–∫–∞—é –º–∏–≥—Ä–∞—Ü–∏–∏..."
npm run db:migrate || true

# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
log "üìò –ì–µ–Ω–µ—Ä–∏—Ä—É—é Swagger..."
npm run docs-gen || true

log "\nüéâ –ì–æ—Ç–æ–≤–æ!"
log "- –°–µ—Ä–≤–µ—Ä: http://localhost:${PORT}/"
log "- Swagger: http://localhost:${PORT}/api-docs"

if [ "$RUN_AFTER" -eq 1 ]; then
  log "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä (npm run dev)..."
  npm run dev
else
  log "üëâ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run dev"
fi
