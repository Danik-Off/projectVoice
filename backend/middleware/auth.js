const jwt = require('jsonwebtoken');

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
const authenticateToken = (req, res, next) => {
    console.log('üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞:', req.method, req.url);
    
    const authHeader = req.headers['authorization'];
    const token = authHeader && authHeader.split(' ')[1];

    if (!token) {
        console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
        return res.status(401).json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.' });
    }

    console.log('üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º...');

    jwt.verify(token, process.env.JWT_SECRET, (err, user) => {
        if (err) {
            console.log('‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω:', err.message);
            return res.status(403).json({ error: '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω.' });
        }
        
        console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º userId –≤ id –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        req.user = {
            ...user,
            id: user.userId
        };
        next();
    });
};

module.exports = { authenticateToken };
