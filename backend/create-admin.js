const bcrypt = require('bcryptjs');
const { User } = require('./models');

async function createAdminUser() {
    try {
        console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏...\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
        const existingAdmin = await User.findOne({ 
            where: { email: 'admin@projectvoice.com' } 
        });

        if (existingAdmin) {
            console.log('‚úÖ –ê–¥–º–∏–Ω—Å–∫–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:');
            console.log(`   Email: ${existingAdmin.email}`);
            console.log(`   Username: ${existingAdmin.username}`);
            console.log(`   Role: ${existingAdmin.role}`);
            console.log(`   Active: ${existingAdmin.isActive}`);
        } else {
            console.log('‚ùå –ê–¥–º–∏–Ω—Å–∫–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }

        // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∞–¥–º–∏–Ω—Å–∫—É—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å
        const adminData = {
            username: 'superadmin',
            email: 'superadmin@projectvoice.com',
            password: await bcrypt.hash('admin123', 10),
            role: 'admin',
            isActive: true
        };

        const newAdmin = await User.create(adminData);
        
        console.log('\n‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–¥–º–∏–Ω—Å–∫–∞—è —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å:');
        console.log(`   Email: ${newAdmin.email}`);
        console.log(`   Username: ${newAdmin.username}`);
        console.log(`   Password: admin123`);
        console.log(`   Role: ${newAdmin.role}`);

        console.log('\nüìã –í—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:');
        const allAdmins = await User.findAll({ 
            where: { role: 'admin' },
            attributes: ['id', 'username', 'email', 'role', 'isActive']
        });
        
        allAdmins.forEach((admin, index) => {
            console.log(`   ${index + 1}. ${admin.username} (${admin.email}) - ${admin.isActive ? 'Active' : 'Inactive'}`);
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω—Å–∫–æ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞
createAdminUser();
