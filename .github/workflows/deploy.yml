name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Укажите вашу основную ветку

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.1'  # Укажите нужную версию Node.js

    - name: Install dependencies for frontend
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build  # Собираем фронтенд

    - name: List frontend directory after build
      run: ls -la frontend  # Проверяем содержимое директории frontend

    - name: Upload frontend build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build

  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.1'  # Укажите нужную версию Node.js

    - name: Upload backend files
      uses: actions/upload-artifact@v3
      with:
        name: backend-files
        path: backend

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend  # Зависимость от job build-frontend

    steps:
    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build

    - name: List build directory
      run: ls -la ./  # Проверяем содержимое директории frontend/build

    - name: Deploy frontend to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Добавьте ваш закрытый ключ в Secrets
        SERVER_USER: ${{ secrets.SERVER_USER }}  # Добавьте имя пользователя сервера в Secrets
        SERVER_IP: ${{ secrets.SERVER_IP }}  # Добавьте IP-адрес вашего сервера в Secrets
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        # Добавляем сервер в known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
        # Копируем фронтенд
        set -e
        rsync -avz -e "ssh -i private_key" ./ $SERVER_USER@$SERVER_IP:/www/wwwroot/projectVoice/frontend/build/ || { echo "rsync failed"; exit 1; }

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend  # Зависимость от job build-backend

    steps:
    - name: Download backend files
      uses: actions/download-artifact@v3
      with:
        name: backend-files

    - name: Deploy backend to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Добавьте ваш закрытый ключ в Secrets
        SERVER_USER: ${{ secrets.SERVER_USER }}  # Добавьте имя пользователя сервера в Secrets
        SERVER_IP: ${{ secrets.SERVER_IP }}  # Добавьте IP-адрес вашего сервера в Secrets
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        # Добавляем сервер в known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
        # Копируем бэкенд
        rsync -avz -e "ssh -i private_key" ./ $SERVER_USER@$SERVER_IP:/www/wwwroot/projectVoice/backend/
        # Запуск установки зависимостей
        npm i
